$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 - clock $end
  $var wire 1 . reset $end
  $scope module Flow $end
   $var wire 1 - clock $end
   $var wire 1 . reset $end
   $scope module alu $end
    $var wire 4 Q control_op [3:0] $end
    $var wire 1 R control_src $end
    $var wire 32 # in_a_0 [31:0] $end
    $var wire 32 $ in_a_1 [31:0] $end
    $var wire 32 % in_b [31:0] $end
    $var wire 32 & out_result [31:0] $end
   $upscope $end
   $scope module control $end
    $var wire 1 / reg_writeEnable $end
    $var wire 1 S reg_writeSelect $end
    $var wire 1 S pc_srcSelect $end
    $var wire 4 Q alu_op [3:0] $end
    $var wire 1 R alu_src $end
    $var wire 8 T out [7:0] $end
   $upscope $end
   $scope module pc $end
    $var wire 1 - clock $end
    $var wire 1 . reset $end
    $var wire 1 S control_srcSelect $end
    $var wire 32 ' in_pcSrcs_0 [31:0] $end
    $var wire 32 & in_pcSrcs_1 [31:0] $end
    $var wire 32 ( out [31:0] $end
    $var wire 32 ( pc [31:0] $end
   $upscope $end
   $scope module ram $end
    $var wire 1 S writeEnable $end
    $var wire 1 R valid $end
    $var wire 32 U writeAddr [31:0] $end
    $var wire 32 U writeData [31:0] $end
    $var wire 4 Q writeMask [3:0] $end
    $var wire 32 ( readAddr [31:0] $end
    $var wire 32 ) readData [31:0] $end
   $upscope $end
   $scope module reg_0 $end
    $var wire 1 - clock $end
    $var wire 1 . reset $end
    $var wire 1 0 control_writeEnable $end
    $var wire 1 S control_writeSelect $end
    $var wire 5 * in_writeAddr [4:0] $end
    $var wire 32 & in_writeData_0 [31:0] $end
    $var wire 5 + in_rs_0 [4:0] $end
    $var wire 5 , in_rs_1 [4:0] $end
    $var wire 32 # out_src_0 [31:0] $end
    $var wire 32 % out_src_1 [31:0] $end
    $var wire 32 1 regFile_0 [31:0] $end
    $var wire 32 2 regFile_1 [31:0] $end
    $var wire 32 3 regFile_2 [31:0] $end
    $var wire 32 4 regFile_3 [31:0] $end
    $var wire 32 5 regFile_4 [31:0] $end
    $var wire 32 6 regFile_5 [31:0] $end
    $var wire 32 7 regFile_6 [31:0] $end
    $var wire 32 8 regFile_7 [31:0] $end
    $var wire 32 9 regFile_8 [31:0] $end
    $var wire 32 : regFile_9 [31:0] $end
    $var wire 32 ; regFile_10 [31:0] $end
    $var wire 32 < regFile_11 [31:0] $end
    $var wire 32 = regFile_12 [31:0] $end
    $var wire 32 > regFile_13 [31:0] $end
    $var wire 32 ? regFile_14 [31:0] $end
    $var wire 32 @ regFile_15 [31:0] $end
    $var wire 32 A regFile_16 [31:0] $end
    $var wire 32 B regFile_17 [31:0] $end
    $var wire 32 C regFile_18 [31:0] $end
    $var wire 32 D regFile_19 [31:0] $end
    $var wire 32 E regFile_20 [31:0] $end
    $var wire 32 F regFile_21 [31:0] $end
    $var wire 32 G regFile_22 [31:0] $end
    $var wire 32 H regFile_23 [31:0] $end
    $var wire 32 I regFile_24 [31:0] $end
    $var wire 32 J regFile_25 [31:0] $end
    $var wire 32 K regFile_26 [31:0] $end
    $var wire 32 L regFile_27 [31:0] $end
    $var wire 32 M regFile_28 [31:0] $end
    $var wire 32 N regFile_29 [31:0] $end
    $var wire 32 O regFile_30 [31:0] $end
    $var wire 32 P regFile_31 [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000001 $
b00000000000000000000000000000000 %
b00000000000000000000000000000001 &
b00000000000000000000000000000100 '
b00000000000000000000000000000000 (
b00000000000100010100000100010011 )
b00010 *
b00010 +
b00001 ,
1-
1.
1/
10
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b0000 Q
1R
0S
b10000001 T
b00000000000000000000000000000000 U
#1
0-
#2
b10000000000000000000000000000100 '
b10000000000000000000000000000000 (
1-
#3
0-
#4
1-
#5
0-
#6
1-
#7
0-
#8
1-
#9
0-
#10
b00000000000000000000000000000001 #
b10000000000000000000000000001000 '
b10000000000000000000000000000100 (
1-
0.
b00000000000000000000000000000001 3
#11
0-
