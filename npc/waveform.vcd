$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 M clock $end
  $var wire 1 N reset $end
  $scope module Flow $end
   $var wire 1 M clock $end
   $var wire 1 N reset $end
   $scope module alu $end
    $var wire 4 O control_op [3:0] $end
    $var wire 32 # in_a [31:0] $end
    $var wire 32 $ in_b [31:0] $end
    $var wire 32 % out_result [31:0] $end
   $upscope $end
   $scope module control $end
    $var wire 1 P reg_writeEnable $end
    $var wire 1 P reg_writeSelect $end
    $var wire 1 P pc_srcSelect $end
    $var wire 4 O alu_op [3:0] $end
    $var wire 7 Q out [6:0] $end
   $upscope $end
   $scope module pc $end
    $var wire 1 M clock $end
    $var wire 1 N reset $end
    $var wire 1 P control_srcSelect $end
    $var wire 32 & in_pcSrcs_0 [31:0] $end
    $var wire 32 % in_pcSrcs_1 [31:0] $end
    $var wire 32 ' out [31:0] $end
    $var wire 32 ' pc [31:0] $end
   $upscope $end
   $scope module ram_mem_ext $end
    $var wire 10 ( R0_addr [9:0] $end
    $var wire 1 R R0_en $end
    $var wire 1 M R0_clk $end
    $var wire 32 ) R0_data [31:0] $end
   $upscope $end
   $scope module reg_core $end
    $var wire 1 M clock $end
    $var wire 1 N reset $end
    $var wire 1 P writePort_enable $end
    $var wire 5 * writePort_addr [4:0] $end
    $var wire 32 % writePort_data [31:0] $end
    $var wire 5 + readPorts_0_addr [4:0] $end
    $var wire 32 # readPorts_0_data [31:0] $end
    $var wire 5 , readPorts_1_addr [4:0] $end
    $var wire 32 $ readPorts_1_data [31:0] $end
    $var wire 32 - regFile_0 [31:0] $end
    $var wire 32 . regFile_1 [31:0] $end
    $var wire 32 / regFile_2 [31:0] $end
    $var wire 32 0 regFile_3 [31:0] $end
    $var wire 32 1 regFile_4 [31:0] $end
    $var wire 32 2 regFile_5 [31:0] $end
    $var wire 32 3 regFile_6 [31:0] $end
    $var wire 32 4 regFile_7 [31:0] $end
    $var wire 32 5 regFile_8 [31:0] $end
    $var wire 32 6 regFile_9 [31:0] $end
    $var wire 32 7 regFile_10 [31:0] $end
    $var wire 32 8 regFile_11 [31:0] $end
    $var wire 32 9 regFile_12 [31:0] $end
    $var wire 32 : regFile_13 [31:0] $end
    $var wire 32 ; regFile_14 [31:0] $end
    $var wire 32 < regFile_15 [31:0] $end
    $var wire 32 = regFile_16 [31:0] $end
    $var wire 32 > regFile_17 [31:0] $end
    $var wire 32 ? regFile_18 [31:0] $end
    $var wire 32 @ regFile_19 [31:0] $end
    $var wire 32 A regFile_20 [31:0] $end
    $var wire 32 B regFile_21 [31:0] $end
    $var wire 32 C regFile_22 [31:0] $end
    $var wire 32 D regFile_23 [31:0] $end
    $var wire 32 E regFile_24 [31:0] $end
    $var wire 32 F regFile_25 [31:0] $end
    $var wire 32 G regFile_26 [31:0] $end
    $var wire 32 H regFile_27 [31:0] $end
    $var wire 32 I regFile_28 [31:0] $end
    $var wire 32 J regFile_29 [31:0] $end
    $var wire 32 K regFile_30 [31:0] $end
    $var wire 32 L regFile_31 [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000100 &
b00000000000000000000000000000000 '
b0000000000 (
b00000000000000000000000000000000 )
b00000 *
b00000 +
b00000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
0M
0N
b0000 O
0P
b0000000 Q
1R
#1
#2
#3
#4
#5
#6
#7
#8
#9
#10
#11
#12
#13
#14
#15
#16
#17
#18
#19
#20
#21
#22
#23
#24
#25
#26
#27
#28
#29
#30
#31
#32
#33
#34
#35
#36
#37
#38
#39
#40
#41
#42
#43
#44
#45
#46
#47
#48
#49
#50
#51
#52
#53
#54
#55
#56
#57
#58
#59
#60
#61
#62
#63
#64
#65
#66
#67
#68
#69
#70
#71
#72
#73
#74
#75
#76
#77
#78
#79
#80
#81
#82
#83
#84
#85
#86
#87
#88
#89
#90
#91
#92
#93
#94
#95
#96
#97
#98
#99
